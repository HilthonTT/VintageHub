@page "/Account"
@inject IUserEndpoint UserEndpoint
@inject IOrderEndpoint OrderEndpoint
@inject AuthenticationStateProvider AuthProvider
@inject NavigationManager Navigation
@attribute [Authorize]

<div class="container">
    <div class="row">
        <div class="col-12 mx-auto">
            <div class="account-container">
                <h2 class="fw-bold text-uppercase">Account Information</h2>
                <hr />
                <div>
                    <p><strong>First Name:</strong> @loggedInUser?.FirstName</p>
                    <p><strong>Last Name:</strong> @loggedInUser?.LastName</p>
                    <p><strong>Display Name:</strong> @loggedInUser?.DisplayName</p>
                    <p><strong>Address:</strong> @loggedInUser?.Address</p>
                    <p><strong>Email:</strong> @loggedInUser?.EmailAddress</p>
                    <p><strong>Orders Made:</strong> @orders?.Count</p>
                </div>
                <button @onclick="LoadEditProfile" class="btn btn-primary">
                    Edit Profile
                </button>
            </div>
        </div>
    </div>
</div>


@code {
    private UserModel loggedInUser;
    private List<OrderModel> orders;

    protected override async Task OnInitializedAsync()
    {
        loggedInUser = await AuthProvider.GetUserFromAuth(UserEndpoint);
        if (loggedInUser is not null)
        {
            orders = await OrderEndpoint.GetOrdersByUserIdAsync(loggedInUser.Id);
        }
    }

    private void ClosePage()
    {
        Navigation.NavigateTo("/");
    }

    private void LoadEditProfile()
    {
        Navigation.NavigateTo("/authentication/profile");
    }
}
