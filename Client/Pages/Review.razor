@page "/Artifact/{ArtifactId:int}/Review/{ReviewId:int}"
@inject IStringLocalizer<Resource> Localizer
@inject IReviewEndpoint ReviewEndpoint
@inject NavigationManager Navigation

<PageTitle>@review?.Title</PageTitle>

@if (isLoading)
{
    <LoadingTemplate />
}
else if (review is null)
{
    <MudAlert Severity="Severity.Error" ShowCloseIcon="true"
              CloseIcon="@Icons.Material.Filled.Close">
        @Localizer["not-found"]
    </MudAlert>
}
else
{
    <MudGrid Class="mt-3 mb-5">
        <MudItem xs="12">
            <MudCard>
                <MudCardContent>
                    <MudGrid>
                        <MudItem xs="11">             
                            <MudText Typo="Typo.h6" Class="fw-bold text-uppercase">
                                @review.Title
                            </MudText>
                            <MudText Typo="Typo.subtitle1">
                                @Localizer["written-by"] @writerFullName
                            </MudText>
                            <MudRating SelectedValue="review.Rating" ReadOnly="true" />
                            <MudDivider Class="mt-3 mb-3" />
                            <MudText Typo="Typo.body1" Class="text-break">
                                @review.Description
                            </MudText>
                        </MudItem>
                        <MudItem xs="1">
                            <div class="d-flex justify-content-end">
                                <MudIconButton Icon="@Icons.Material.Filled.Close" OnClick="ClosePage" />
                            </div>
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
}

@code {
    [Parameter]
    public int ArtifactId { get; set; }

    [Parameter]
    public int ReviewId { get; set; }

    private ReviewDisplayModel review;
    private bool isLoading = true;
    private string writerFullName = "";

    protected override async Task OnInitializedAsync()
    {
        review = await ReviewEndpoint.GetReviewByIdAsync(ReviewId);
        writerFullName = $"{review.User?.FirstName} {review.User?.LastName}";

        isLoading = false;
    }

    private void ClosePage()
    {
        Navigation.NavigateTo($"/Artifact/{ArtifactId}");
    }
}
